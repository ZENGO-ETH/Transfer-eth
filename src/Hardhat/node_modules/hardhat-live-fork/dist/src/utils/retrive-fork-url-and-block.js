"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.retrieveForkUrlAndBlock = void 0;
const ForkBlockchain_1 = require("hardhat/internal/hardhat-network/provider/fork/ForkBlockchain");
async function retrieveForkUrlAndBlock(provider) {
    if (provider["_node"] === undefined) {
        await provider["_init"]();
    }
    const forkBlockchain = provider["_node"]?.["_blockchain"];
    if (forkBlockchain.constructor.name !== ForkBlockchain_1.ForkBlockchain.name) {
        throw new Error("Provider has not been initialised with forkConfig");
    }
    const url = forkBlockchain["_jsonRpcClient"]["_httpProvider"]["_url"];
    const block = forkBlockchain["_forkBlockNumber"].toNumber();
    return { url, block };
}
exports.retrieveForkUrlAndBlock = retrieveForkUrlAndBlock;
//# sourceMappingURL=retrive-fork-url-and-block.js.map